{"version":3,"sources":["Components/NavigationMenu.js","Components/Navigation.js","Components/Header.js","Components/Footer.js","Views/Home.js","Views/About.js","Components/Loader.js","Views/Product.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","className","to","onClick","closeMenu","Navigation","useState","showMenu","setShowMenu","maskTransitions","useTransition","from","position","opacity","enter","leave","menuTransitions","transform","icon","faBars","map","item","key","div","style","Header","Footer","Home","About","Loader","Product","id","useParams","url","loading","data","error","product","setProduct","content","useEffect","axios","get","then","response","catch","name","src","image","alt","price","description","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.7a72ff3f.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nfunction NavigationMenu(props) {\n    return (\n        <div>\n            <div className=\"font-bold\">\n                This is the menu\n            </div>\n            <ul>\n                <li>\n                    <Link\n                        to=\"/\"\n                        className=\"text-blue-500 py-3 border-t border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        Home\n                                </Link>\n                </li>\n                <li>\n                    <Link\n                        to=\"/about\"\n                        className=\"text-blue-500 py-3 border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        About\n                                </Link>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default NavigationMenu","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { useTransition, animated } from 'react-spring'\nimport NavigationMenu from './NavigationMenu'\n\nfunction Navigation() {\n    const [showMenu, setShowMenu] = useState(false)\n    const maskTransitions = useTransition(showMenu, null, {\n        from: { position: 'absolute', opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    })\n\n    const menuTransitions = useTransition(showMenu, null, {\n        from: { opacity: 0, transform: 'translateX(-100%)' },\n        enter: { opacity: 1, transform: 'translateX(0%)' },\n        leave: { opacity: 0, transform: 'translateX(-100%)' },\n    })\n\n    return (\n        <nav>\n            <span className=\"text-xl\">\n                <FontAwesomeIcon\n                    icon={faBars}\n                    onClick={() => setShowMenu(!showMenu)}\n                />\n            </span>\n            {\n                maskTransitions.map(({ item, key, props }) =>\n                    item &&\n                    <animated.div\n                        key={key}\n                        style={props}\n                        className=\"bg-black-t-50 fixed top-0 left-0 w-full h-full z-50\"\n                        onClick={() => setShowMenu(false)}\n                    >\n                    </animated.div>\n                )\n            }\n            {\n                menuTransitions.map(({ item, key, props }) =>\n                    item &&\n                    <animated.div\n                        key={key}\n                        style={props}\n                        className=\"fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow p-3\"\n                    >\n                        <NavigationMenu \n                            closeMenu={() => setShowMenu(false)}\n                        />\n                    </animated.div>\n                )\n            }\n        </nav>\n    )\n}\n\nexport default Navigation","import React from 'react'\nimport Navigation from './Navigation'\n\nfunction Header() {\n    return (\n        <header className=\"border-b p-3 flex justify-between items-center\">\n            <span className=\"font-bold\">\n                AppName  \n            </span>\n\n            <Navigation />\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\n\nfunction Footer() {\n    return (\n        <header className=\"bg-gray-200 text-center text-xs p-3 absolute bottom-0 w-full\">\n            &copy; Copyright 2020\n        </header>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nfunction Home() {\n    return (\n        <div>\n            <h1 className=\"font-bold text-2xl\">This is home page</h1>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n            <h1 className=\"font-bold text-2xl\">About us</h1>\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\n\nfunction Loader() {\n    return (\n            <div className=\"border border-gray-300 shadow rounded-md p-4 max-w-sm w-full mx-auto\">\n                <div className=\"animate-pulse flex space-x-4\">\n                    <div className=\"rounded-full bg-gray-400 h-12 w-12\"></div>\n                    <div className=\"flex-1 space-y-4 py-1\">\n                        <div className=\"h-4 bg-gray-400 rounded w-3/4\"></div>\n                        <div className=\"space-y-2\">\n                            <div className=\"h-4 bg-gray-400 rounded\"></div>\n                            <div className=\"h-4 bg-gray-400 rounded w-5/6\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default Loader","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams } from 'react-router-dom'\nimport Loader from '../Components/Loader'\n\nfunction Product() {\n    const { id } = useParams()\n    const url = `https://5f311cb7373bc7001635f4bf.mockapi.io/products/${id}`\n    const [product, setProduct] = useState({\n        loading: false,\n        data: null,\n        error: false\n    })\n\n    let content = null\n\n    useEffect(() => {\n        setProduct({\n            loading: true,\n            data: null,\n            error: false\n        })\n        axios.get(url)\n            .then(response => {\n                setProduct({\n                    loading: false,\n                    data: response.data,\n                    error: false\n                })\n            })\n            .catch(() => {\n                setProduct({\n                    loading: false,\n                    data: null,\n                    error: true\n                })\n            })\n    }, [url])\n\n    if (product.loading) {\n        content = <Loader />\n    }\n\n    if (product.error) {\n        content = \n            <p>Error Encountered. Please try again later</p>\n    }\n\n    if (product.data) {\n        content = \n            <div>\n                <h1 className=\"text-2xl font-bold mb-3\">\n                    { product.data.name }\n                </h1>\n                <div className=\"mb-3\">\n                    <img\n                        src={ product.data.image }\n                        alt={ product.data.name} \n                    />\n                </div>\n                <div className=\"font-bold text-xl mb-3\">\n                    $ { product.data.price }\n                </div>\n                <div>\n                    { product.data.description }\n                </div>\n            </div>\n    }\n\n    return (\n        <div>\n            { content }\n        </div>\n    )\n}\nexport default Product","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Header from './Components/Header'\nimport Footer from './Components/Footer'\nimport Home from './Views/Home'\nimport About from './Views/About'\nimport Product from './Views/Product'\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n      <Header />\n      <div className=\"p-5\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/products/:id\">\n          <Product />\n        </Route>\n      </Switch>\n      </div>\n      <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}